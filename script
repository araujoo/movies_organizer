#!/bin/bash
source macros.sh
source functions.sh


#checking dependencies
check_dependencies

#generate file backup dir
if [ ! -d "${SUBS_BKP_DIR}" ]
then
	echo "Creating subtitles folder"
	mkdir "${SUBS_BKP_DIR}"
fi

if [ ! -d "${TORRENTS_BKP_DIR}" ]
then
	echo "Creating torrents folder"
	mkdir "${TORRENTS_BKP_DIR}"
fi

if [ ! -d "${SOURCES_BKP_DIR}" ]
then
	echo "Creating sources folder"
	mkdir "${SOURCES_BKP_DIR}"
fi

echo "Finding and Backuping sources files"
find . -type f \( -name "*.rar" -o -name "*.zip" \) -print0 |
while IFS= read -rd '' file
do
	mv "$file" "${SOURCES_BKP_DIR}"
done

echo "Exctracting source files"
cd "${SOURCES_BKP_DIR}"
for i in ./*.zip ./*.rar
do
	extract_file "${i}"
done

cd ../

echo "Cleaning folder"
rm *.torrent
rm *.srt
rm *.zip *.rar

echo "Processing subtitle files"
find . -type f -name "*.srt" -print0 |
while IFS= read -rd '' file
do
	NEW_FILE_NAME=''
	NEW_FILE_NAME="$(get_new_file_name ${file})"
	if [ $? -eq 0 ]
	then
		#check if this value already exists in array list
		check_file_in_list "${NEW_FILE_NAME}" "${FILE_LIST}"
		if [ $? -ne 0 ]
		then
			#adjust subtitle
			cp -rn "$file" "./${NEW_FILE_NAME}.srt"
			FILE_LIST="${FILE_LIST}:${NEW_FILE_NAME}"
		fi
		mv "$file" "${SUBS_BKP_DIR}"
	else
		#show an error message
		echo "${COULD_NOT_PROCESS} $file: ${NEW_FILE_NAME}"
	fi
done

echo "Processing torrent files"
find . -type f -name "*.torrent" -print0 |
while IFS= read -rd '' file
do
	mv "$file" "${TORRENTS_BKP_DIR}"
done

echo "Processing movies files"
find . -type f \( -name '*.avi' -o -name '*.mkv' -o -name '*.mp4' \) -print0 | 
while IFS= read -rd '' movie
do
	#echo "printing $movie" 
	NEW_FILE_NAME=
	NEW_FILE_NAME="$(get_new_file_name "${movie}")"
	if [ $? -eq 0 ]
	then
		EXTENS=
		EXTENS="$(get_file_extension "${movie}")"
		if [ $? -eq 0 ] && [ -n ${EXTENS} ]
		then
			#rename the file
			mv "${movie}" "./${NEW_FILE_NAME}${EXTENS}"
		else
			echo "${EXTENS_FAILED}"
		fi
	else
		#show an error message
		echo "${COULD_NOT_PROCESS} $movie: ${NEW_FILE_NAME}"
	fi
done
